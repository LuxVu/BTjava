package factory.dialog;

public abstract class Dialog {
    // The creator may also provide some default implementations
    // of the factory method

    public abstract Button createButton();

    /*
    * Note that, despite its name, the creator's primary responsibility
    * is NOT creating products. It usually contains some core business logic that
    * relies on product object returned by the factory method. Subclasses can
    * indirectly change that business logic by overriding the factory method
    * and returning a different type of product from it.
    * */

    public void render() {
        // Call the factory method to create a product  object
        Button okButton = createButton();

        // Now use the product
        okButton.onClick();
        okButton.render();
    }
}
